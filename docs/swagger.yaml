basePath: /
definitions:
  entity.Book:
    properties:
      author:
        type: string
      created:
        type: string
      deleted:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      img_url:
        type: string
      medium_price:
        type: number
      name:
        type: string
      updated:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  request.BookReq:
    properties:
      author:
        type: string
      description:
        type: string
      img_url:
        type: string
      medium_price:
        type: number
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: glauber.barboza@hotmail.com
    name: Glauber
  description: Api de estudo Golang.
  title: Golang
  version: "1.0"
paths:
  /book:
    get:
      consumes:
      - application/json
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "417":
          description: Expectation Failed
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get all books
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Create books
      parameters:
      - description: Add book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/request.BookReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "417":
          description: Expectation Failed
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Create book
      tags:
      - Book
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete books
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/entity.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "417":
          description: Expectation Failed
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Delete book
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: get book by ID
      parameters:
      - description: Book id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "417":
          description: Expectation Failed
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Get books
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Edit book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Edit book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/request.BookReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "417":
          description: Expectation Failed
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Edit book
      tags:
      - Book
schemes:
- http
swagger: "2.0"
